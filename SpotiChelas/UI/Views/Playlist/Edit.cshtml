@using Dto
@model Dto.PlaylistDto

@{
    ViewBag.Title = @Model.Name;
    var dropdownlist = @Html.Action("GetPlaylistsForAddButton");
}

<div id="successMessage" class="alert alert-success span4 offset4" style="display: none; position: absolute">
    <p class="text-center"><strong>Sucess!</strong>The changes have been saved!</p>
</div>

<div>
    <h2>@Model.Name</h2>
    <h6><i class="icon-user"></i> @Html.ActionLink(@Model.UserId, "Profile", "Account")</h6>
    <h5 id="ntracks">@Model.Tracks.Count() Tracks </h5>
</div>

<div class="btn-toolbar">
    <a class="btn btn-primary" href="@Url.Action("Index")">Back to List</a>
    @if (Model.Contributor)
    {
        <a id="savechanges" class="btn btn-success" href="#">Save Changes</a>
        <form id="deleteform" class="pull-right" action="@Url.Action("Delete")" method="POST">
            @Html.HiddenFor(m=> m.Id)
            <button class="btn btn-danger" type="submit">Delete Playlist</button>
        </form>
    }
</div>
<div>
    <table class="table table-hover">
        <thead>
            <tr>

                <th>
                    Track
                </th>
                <th>
                    Artist
                </th>
                @*<th>
            Album
        </th>*@
                <th>
                    Duration
                </th>
                <th>
                    
                </th>
            </tr>
        </thead>
        <tbody id="sortable">
            @foreach (TrackDto track in Model.Tracks)
            {
                <tr data-trackid="@track.Id">
                    <td>
                        @Html.DisplayFor(model => track.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(model => track.Artist)
                    </td>
                    @* <td>
                          @Html.DisplayFor(model => track.Album)
                    </td>*@
                    <td>
                        @Html.DisplayFor(model => track.Duration)
                    </td>
                    <td data-trackid="@track.Id">
                        
                        <a class="icon-play spotify-play" href="#"></a>
                        @dropdownlist
                        @if (Model.Contributor)
                        {
                            <a class="icon-remove removetrack" href="#"></a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div id="dialog"></div>

<script type="text/javascript">
    $(function() {
        initDialog("#dialog", ".spotify-play", 'tr', '@Url.Action("Play")');
        initAddToPlaylists(".dropdown-playlist", '@Url.Action("AddTrack")');
        var s = $('#sortable');
        s.sortable({
            start: function (event, ui) {
                $(ui.item).find('td:last').hide();
            },
            stop: function (event,ui) {
                $(ui.item).find('td:last').show();
            },
            helper: function (e, ui) {
                ui.children().each(function() {
                    $(this).width($(this).width());
                });
                return ui;
            }
        });
        s.disableSelection();

        @if (Model.Contributor)
        {
            <text>
            $('#savechanges').click(function(e) {
                var sortedIds = s.sortable("toArray",{attribute: 'data-trackid'});
                $('#ntracks').text(sortedIds.length + ' Tracks');
                var array = [];
                $.each(sortedIds, function(index, value) {
                    array.push({ 'Id': value });
                });
                var data = {
                    'id': '@Model.Id',
                    'userid': '@User.Identity.Name',
                    'tracks': array
                };
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("EditTracks")",
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    traditional: true,
                    success: function() {
                        $('#successMessage').show();
                        $('#successMessage').delay(2000).fadeOut('slow');
                    }
                });
                e.preventDefault();
            });
            $('.removetrack').click(function(e) {

                $(this).closest('tr').remove();
                e.preventDefault();
            });
            $('#deleteform').submit(function (e) {
                var form = this;
                bootbox.confirm("Delete " + "@Model.Name?\n This action is irreversible!", function (result) {
                    if (result) 
                        form.submit();
                });
                return false;
            });
        </text>
        }

    });

</script>